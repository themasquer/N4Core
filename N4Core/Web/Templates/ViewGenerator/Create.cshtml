@inherits Microsoft.VisualStudio.Web.CodeGeneration.Templating.RazorTemplateBase
@using Microsoft.VisualStudio.Web.CodeGeneration.EntityFrameworkCore
@using System.Collections.Generic
@using System.Linq
@{
    var viewModel = "@model " + Model.ViewDataTypeShortName + "CommandModel";
}
@viewModel
@{
    if (Model.IsPartialView)
    {
    }
    else if (Model.IsLayoutPageSelected)
    {
@:@@{
    @:ViewModel viewModel = ViewBag.ViewModel as ViewModel;
    @:ViewData["Title"] = @@viewModel?.ViewTexts.Create;
        if (!string.IsNullOrEmpty(Model.LayoutPageFile))
        {
    @:Layout = "@Model.LayoutPageFile";
        }
@:}
@:
    }
    else
    {
@:@@{
    @:Layout = null;
@:}
@:
@:<!DOCTYPE html>
@:
@:<html>
@:<head>
    @:<meta name="viewport" content="width=device-width" />
    @:<title>@@ViewData["Title"]</title>
@:</head>
@:<body>
@:
        //    PushIndent("    ");
    }
@:<div class="container">
@:@@if (viewModel is not null)
@:{
@:if (!viewModel.Modal)
@:{
    @:<h3 class="text-light bg-primary p-2"><i class="bi bi-plus-square"></i> @@ViewData["Title"]</h3>
    <partial name="_Message" />
    @:<hr />
@:}
    @:<div class="row">
        @:<div class="col-12">
        bool fileFound = false;
        foreach (var property in Model.ModelMetadata.Properties)
        {
            if (property.TypeName.Equals(typeof(byte[]).FullName))
            {
                fileFound = true;
                break;
            }
        }
        if (fileFound)
        {
            @:<form asp-action="@Model.ViewName" enctype="multipart/form-data" autocomplete="off" class="modalForm">
        }
        else
        {
            @:<form asp-action="@Model.ViewName" autocomplete="off" class="modalForm">
        }
		        @:@@Html.AntiForgeryToken()
                @:<div asp-validation-summary="ModelOnly" class="text-danger"></div>
            foreach (var property in Model.ModelMetadata.Properties)
            {
                if (property.Scaffold && !property.IsAutoGenerated && !property.IsReadOnly)
                {
                    if (property.IsForeignKey)
                    {
                @:<div class="row mb-3">
                    @:<displayname asp-for="@property.PropertyName" asp-language="@@viewModel.Language" class="col-2 col-form-label fw-bold"></displayname>
				    @:<div class="col-10">
					    @:<select asp-for="@property.PropertyName" class="form-select select2" asp-items="ViewBag.@property.PropertyName">
						    @:<option value="">-- @@viewModel.ViewTexts.Select --</option>
					    @:</select>
					    @:<validation asp-for="@property.PropertyName" asp-language="@@viewModel.Language" class="text-danger"></validation>
				    @:</div>
                @:</div>
                        continue;
                    }
                    bool isCheckbox = (property.TypeName.Equals(typeof(bool).FullName) || property.TypeName.Equals(typeof(bool?).FullName)) && !property.PropertyName.Equals("IsDeleted");
                    if (isCheckbox)
                    {
                @:<div class="row mb-3">
				    @:<displayname asp-for="@property.PropertyName" asp-language="@@viewModel.Language" class="col-2 col-form-label fw-bold"></displayname>
				    @:<div class="col-10" style="padding-top: 7px;">
					    @:<input class="form-check-input" asp-for="@property.PropertyName" />
                    @:</div>
                @:</div>
                    }
                    else if (property.IsEnum && !property.IsEnumFlags)
                    {
                @:<div class="row mb-3">
                    @:<displayname asp-for="@property.PropertyName" asp-language="@@viewModel.Language" class="col-2 col-form-label fw-bold"></displayname>
				    @:<div class="col-10 pt-1">
                    @:@@{
                        @:var enumItems = Enum.GetValues(typeof(@property.PropertyName));
                        @:for (int i = 0; i < enumItems.Length; i++) 
                        @:{
                        @:<div class="form-check form-check-inline pt-1">
                            @:@@if (i == 0) 
                            @:{
                            @:<input asp-for="@property.PropertyName" type="radio" class="form-check-input" value="@@((int)enumItems.GetValue(i))" id="@@enumItems.GetValue(i).ToString()" checked />
                            @:<label class="form-check-label" for="@@enumItems.GetValue(i).ToString()">@@enumItems.GetValue(i).ToString()</label>
                            @:}
                            @:else
                            @:{
                            @:<input asp-for="@property.PropertyName" type="radio" class="form-check-input" value="@@((int)enumItems.GetValue(i))" id="@@enumItems.GetValue(i).ToString()" />
                            @:<label class="form-check-label" for="@@enumItems.GetValue(i).ToString()">@@enumItems.GetValue(i).ToString()</label>
                            @:}
                        @:</div>
                        @:}
                    @:}
                    @:</div>
                @:</div>
                    }
                    else if (property.IsMultilineText)
                    {
                @:<div class="row mb-3">
                    @:<displayname asp-for="@property.PropertyName" asp-language="@@viewModel.Language" class="col-2 col-form-label fw-bold"></displayname>
				    @:<div class="col-10">
					    @:<textarea asp-for="@property.PropertyName" class="form-control" rows="3"></textarea>
					    @:<validation asp-for="@property.PropertyName" asp-language="@@viewModel.Language" class="text-danger"></validation>
				    @:</div>
                @:</div>
                    }
                    else
                    {
                        bool isDateTime = (property.TypeName.Equals(typeof(DateTime).FullName) || property.TypeName.Equals(typeof(DateTime?).FullName)) && !property.PropertyName.Equals("CreateDate") && !property.PropertyName.Equals("UpdateDate");
                        bool isFile = property.TypeName.Equals(typeof(byte[]).FullName);
                        if (isDateTime)
                        {
                @:<div class="row mb-3">
                    @:<displayname asp-for="@property.PropertyName" asp-language="@@viewModel.Language" class="col-2 col-form-label fw-bold"></displayname>
				    @:<div class="col-10">
					    @:<input asp-for="@property.PropertyName" class="form-control datetimepicker" type="text" />
					    @:<validation asp-for="@property.PropertyName" asp-language="@@viewModel.Language" class="text-danger"></validation>
				    @:</div>
                @:</div>
                        }
                        else if (isFile)
                        {
                @:<div class="row mb-3">
                    @:<displayname asp-for="FormFile" asp-language="@@viewModel.Language" class="col-2 col-form-label fw-bold"></displayname>
				    @:<div class="col-9">
					    @:<input name="FormFile" type="file" class="form-control" accept=".jpg, .jpeg, .png" />
				    @:</div>
                @:</div>
                        }
                        else
                        {
                            if (!property.PropertyName.Equals("FileContent") && !property.PropertyName.Equals("FilePath") && !property.PropertyName.Equals("Guid") && !property.PropertyName.Equals("CreatedBy") && !property.PropertyName.Equals("UpdatedBy") && !property.PropertyName.Equals("CreateDate") && !property.PropertyName.Equals("UpdateDate") && !property.PropertyName.Equals("IsDeleted"))
                            {
                @:<div class="row mb-3">
                    @:<displayname asp-for="@property.PropertyName" asp-language="@@viewModel.Language" class="col-2 col-form-label fw-bold"></displayname>
				    @:<div class="col-10">
					    @:<input asp-for="@property.PropertyName" class="form-control" />
					    @:<validation asp-for="@property.PropertyName" asp-language="@@viewModel.Language" class="text-danger"></validation>
				    @:</div>
                @:</div>
                            }
                        }
                    }
                }
            }
                @:@@*
                @:<div class="row mb-3">
                    @:<displayname asp-for="ManyToManyIds" asp-language="@@viewModel.Language" class="col-2 col-form-label fw-bold"></displayname>
				    @:<div class="col-10">
					    @:<select multiple asp-for="ManyToManyIds" class="form-select select2" asp-items="ViewBag.ManyToManyIds"></select>
					    @:<validation asp-for="ManyToManyIds" asp-language="@@viewModel.Language" class="text-danger"></validation>
				    @:</div>
                @:</div>
                @:*@@
            }
                <div class="row mb-3">
                    <div class="offset-2 col-10">
                    @@if (!viewModel.Modal)
                    {
                        <button type="submit" class="btn btn-success"><i class="bi bi-check-square"></i> @@viewModel.ViewTexts.Save</button>
                    }
                    else
                    {
                        <a href="#" class="btn btn-success" onclick=saveModal();><i class="bi bi-check-square"></i> @@viewModel.ViewTexts.Save</a>
                    }
                        &nbsp;&nbsp;&nbsp;&nbsp;
                        <button type="reset" class="btn btn-warning text-dark"><i class="bi bi-arrow-clockwise"></i> @@viewModel.ViewTexts.Clear</button>
                    @@if (!viewModel.Modal)
                    {
                        @@:&nbsp;&nbsp;&nbsp;&nbsp;
                        <a asp-action="Index" asp-route-pagesession="true" class="btn btn-outline-primary"><i class="bi bi-list"></i> @@viewModel.ViewTexts.BackToList</a>
                    }
                    </div>
                </div>
            </form>
        </div>
    </div>
}
</div>

@{
@:@@if (viewModel is not null)
@:{
@:if (!viewModel.Modal)
@:{
@:@@section Scripts {
if (Model.ReferenceScriptLibraries)
{
    @:<partial name="_ValidationScriptsPartial" />
}
    @:<partial name="_Select2" />
    @:<partial name="_DateTimePicker" model="viewModel" />
@:}
@:}
@:else
@:{
if (Model.ReferenceScriptLibraries)
{
    @:<partial name="_ValidationScriptsPartial" />
}
    @:<partial name="_Select2" />
    @:<partial name="_DateTimePicker" model="viewModel" />
@:}
@:}
}
@{
    if (!Model.IsPartialView && !Model.IsLayoutPageSelected)
    {
@:</body>
@:</html>
    }
}